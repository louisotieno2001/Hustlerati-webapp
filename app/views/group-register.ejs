<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Group accounts | Hustlerati</title>
    <link rel="stylesheet" href="/styles/auth.css">
    <link rel="icon" href="/images/logo1.png" type="image/x-icon">
    <link rel="stylesheet" href="/styles/loader.css">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-VCMHYS7QJ4');
    </script>
</head>

<body>
    <div class="login-page">
        <div class="login-form">
            <h1>Group Account</h1>
            <div class="input-div">
                <span class="material-symbols-outlined">
                    account_circle
                </span>
                <input type="text" id="gname" name="gname" required placeholder="Group name">
            </div>
            <p class="error" id="g-name-error"></p>
            <div class="input-div">
                <span class="material-symbols-outlined">
                    account_circle
                </span>
                <input type="text" id="lname" name="lname" required placeholder="Group leader name">
            </div>
            <p class="error" id="l-name-error"></p>
            <div class="input-div">
                <span class="material-symbols-outlined">
                    mail
                </span>
                <input type="email" id="email" name="email" required placeholder="Group email address">
            </div>
            <p class="error" id="mail-error"></p>
            <div class="input-div">
                <span class="material-symbols-outlined">
                    phone_enabled
                </span>
                <input type="tel" name="phone" id="phone" placeholder="Group phone" required>
            </div>
            <p class="error" id="phone-error"></p>
            <div class="input-div">
                <span class="material-symbols-outlined">
                    security
                </span>
                <input type="password" name="" id="password" placeholder="Password" required>
                <span class="material-symbols-outlined" id="pass-visibility">
                    visibility
                </span>
            </div>
            <p class="error" id="pass-error"></p>
            <p class="feedback" id="error"></p>
            <p class="feedback" id="success"></p>
            <button id="registerButton" class="button-5" role="button">Register</button>
            <h4>Already have an account <a href="/hustlers/group/login">Login</a></h4>
        </div>
        <div class="loader" id="loader">
            <div class="spinner"></div>
        </div>
        <div class="stuff">
            <a href="/terms&conditions">Terms Of Service</a>
            <a href="/privacy">Privacy policy</a>
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const submitBtn = document.getElementById('registerButton');
                const toggleVisibility = document.getElementById('pass-visibility');
                const passField = document.getElementById('password');
                const loader = document.getElementById('loader');
                const error = document.getElementById('error');
                const success = document.getElementById('success');

                async function showLoader() {
                    loader.style.display = 'flex';
                }

                // Function to hide the loader
                async function hideLoader() {
                    loader.style.display = 'none';
                }

                async function showError() {
                    error.style.display = 'block'
                }

                async function showSuccess() {
                    success.style.display = 'block'
                }

                toggleVisibility.addEventListener('click', async (e) => {
                    e.preventDefault();
                    passField.type = passField.type === 'password' ? 'text' : 'password';
                });

                submitBtn.addEventListener("click", async (e) => {
                    e.preventDefault();
                    showLoader();
                    const groupName = document.getElementById('gname').value;
                    const leaderName = document.getElementById('lname').value;
                    const email = document.getElementById('email').value;
                    const phone = document.getElementById('phone').value;
                    const password = document.getElementById('password').value;
                    const groupNameError = document.getElementById('g-name-error');
                    const leaderNameError = document.getElementById('l-name-error');
                    const mailError = document.getElementById('mail-error');
                    const passError = document.getElementById('pass-error');
                    const phoneError = document.getElementById('phone-error');


                    // Validate input (you may want to implement more robust validation)
                    if (!groupName || !leaderName || !email || !phone || !password) {
                        hideLoader();
                        showError();
                        error.innerText = "All fields are required.";
                        return;
                    }

                    // Regex patterns for validation
                    const groupNameRegex = /^.{2,}$/; // At least 2 characters
                    const leaderNameRegex = /^.{2,}$/; // At least 2 characters
                    const mailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                    const phoneRegex = /^\d{10}$/; // 10 digits, only numbers

                    // Validate inputs
                    if (!groupNameRegex.test(groupName)) {
                        groupNameError.style.display = 'block';
                        groupNameError.innerText = "Group name must consist at least 2 characters.";
                    }
                    if (!leaderNameRegex.test(leaderName)) {
                        leaderNameError.style.display = 'block';
                        leaderNameError.innerText = "Leader name must consist at least 2 characters.";
                    }
                    if (!mailRegex.test(email)) {
                        mailError.style.display = 'block';
                        mailError.innerText = "Email must have an @ sign.";
                    }
                    if (!phoneRegex.test(phone)) {
                        phoneError.style.display = 'block';
                        phoneError.innerText = "Phone number must be exactly 10 digits.";
                    }

                    // Password validation
                    const passwordErrors = [];

                    if (password.length < 8) {
                        passwordErrors.push("Password must be at least 8 characters long.");
                    }
                    if (!/[A-Z]/.test(password)) {
                        passwordErrors.push("Password must include at least one uppercase letter.");
                    }
                    if (!/[a-z]/.test(password)) {
                        passwordErrors.push("Password must include at least one lowercase letter.");
                    }
                    if (!/\d/.test(password)) {
                        passwordErrors.push("Password must include at least one number.");
                    }
                    if (!/[@$!%*?&(){}^,.;:#<>]/.test(password)) {
                        passwordErrors.push("Password must include at least one special character.");
                    }

                    // Display password errors
                    if (passwordErrors.length > 0) {
                        passError.style.display = 'block'
                        passError.innerText = passwordErrors.join(' ');
                    }

                    // If there are validation errors, stop submission
                    if (groupNameError.innerText || leaderNameError.innerText || mailError.innerText || phoneError.innerText || passError.innerText) {
                        return;
                    }

                    // Create user data object
                    const userData = {
                        groupName,
                        leaderName,
                        email,
                        phone,
                        password
                    };
                    try {
                        // Send registration data to server
                        showLoader();
                        const response = await fetch('/register-group', {
                            method: "POST",
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(userData)
                        });

                        const result = await response.json();

                        if (response.ok) {
                            showSuccess();
                            success.innerText = "You have successfully registered on Hustlerati!";
                            // Redirect to login page 
                            window.location.href = "/hustlers/group/login";
                        } else {
                            showError();
                            error.innerText = "Registration failed. Please try again.";
                            console.log(error);
                        }
                    } catch (error) {
                        console.error("Error during registration:", error);
                        showError();
                        error.innerText = "An error occurred. Please try again later.";
                    } finally {
                        hideLoader();
                    }
                });
            });

        </script>
    </div>
</body>

</html>